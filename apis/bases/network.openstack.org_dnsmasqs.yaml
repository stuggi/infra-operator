---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: dnsmasqs.network.openstack.org
spec:
  group: network.openstack.org
  names:
    kind: DNSMasq
    listKind: DNSMasqList
    plural: dnsmasqs
    singular: dnsmasq
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .spec.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Ready
      jsonPath: .status.conditions[0].status
      name: Ready
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DNSMasq is the Schema for the dnsmasqs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSMasqSpec defines the desired state of DNSMasq
            properties:
              containerImage:
                default: quay.io/tripleozedcentos9/openstack-neutron-server:current-tripleo
                description: DNSMasq Container Image URL TODO create its own container
                  image
                type: string
              customServiceConfig:
                description: CustomServiceConfig - customize the service config using
                  this parameter. The content gets added to to the /etc/dnsmasq.d
                  directory as zzz-custom.conf file.
                type: string
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  service:
                    default: false
                    description: Service enable debug
                    type: boolean
                type: object
              dhcpRanges:
                description: DHCPRanges - enable the integrated DHCP server on the
                  range of addresses available for lease and optionally a lease time.
                  For each network which DHCP needs to be provided a range config
                  is required. service.
                items:
                  description: DHCPRange -
                  properties:
                    domain:
                      description: Domain part of the expmanded host
                      type: string
                    end:
                      description: End address of the range for the DHCP service
                      type: string
                    start:
                      description: Start address of the range for the DHCP service
                      type: string
                  required:
                  - domain
                  - end
                  - start
                  type: object
                type: array
              externalEndpoints:
                description: ExternalEndpoints, expose a VIP using a pre-created IPAddressPool
                items:
                  description: MetalLBConfig to configure the MetalLB loadbalancer
                    service
                  properties:
                    ipAddressPool:
                      description: IPAddressPool expose VIP via MetalLB on the IPAddressPool
                      minLength: 1
                      type: string
                    loadBalancerIPs:
                      description: LoadBalancerIPs, request given IPs from the pool
                        if available. Using a list to allow dual stack (IPv4/IPv6)
                        support
                      items:
                        type: string
                      type: array
                    network:
                      description: Network, network name the dns service gets exposed
                        to
                      type: string
                    sharedIP:
                      default: true
                      description: SharedIP if true, VIP/VIPs get shared with multiple
                        services
                      type: boolean
                    sharedIPKey:
                      default: ""
                      description: SharedIPKey specifies the sharing key which gets
                        set as the annotation on the LoadBalancer service. Services
                        which share the same VIP must have the same SharedIPKey. Defaults
                        to the IPAddressPool if SharedIP is true, but no SharedIPKey
                        specified.
                      type: string
                  required:
                  - ipAddressPool
                  - network
                  type: object
                type: array
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service. Setting NodeSelector here acts as a default value
                  and can be overridden by service specific NodeSelector Settings.
                type: object
              replicas:
                default: 1
                description: Replicas - DNSMasq Replicas
                format: int32
                type: integer
            type: object
          status:
            description: DNSMasqStatus defines the observed state of DNSMasq
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              readyCount:
                description: ReadyCount of dnsmasq deployment
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
